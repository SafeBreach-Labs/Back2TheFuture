[
uuid(3faf4738-3a21-4307-b46c-fdda9bb8c0d5),
version(1.0),
]
interface DefaultIfName
{long Proc0_s_winmmGetPnpInfo(
[out]/* simple_ref */long *arg_0,
[out][ref][size_is(, *arg_0)]byte **arg_1);

long Proc1_s_mmeNotifyDeviceStateChanged(
[in]/* simple_ref */[string] wchar_t* arg_1,
[in]long arg_2);

long Proc2_s_mmeNotifyDeviceAdded(
[in]/* simple_ref */[string] wchar_t* arg_1);

long Proc3_s_mmeNotifyDeviceRemoved(
[in]/* simple_ref */[string] wchar_t* arg_1);

long Proc4_s_mmeNotifyDefaultDeviceChanged(
[in]long arg_1,
[in]long arg_2,
[in]/* simple_ref */[string] wchar_t* arg_3);

long Proc5_s_tsSessionGetAudioProtocol(
[in]long arg_1,
[out]/* simple_ref */long *arg_2,
[out]/* simple_ref */long *arg_3);

long Proc6_s_tsRegisterAudioProtocolNotification(
[out]/* simple_ref */[context_handle] void** arg_1);

long Proc7_s_tsUnregisterAudioProtocolNotification(
[in][out]/* simple_ref */[context_handle] void** arg_1);

long Proc8_s_sndevtResolveSoundAlias(
[in]/* simple_ref */[string] wchar_t* arg_1,
[in][unique][string] wchar_t* arg_2,
[in]long arg_3,
[out]/* simple_ref */__int3264 *arg_4,
[in][out][unique][string] wchar_t** arg_5);

long Proc9_s_pbmRegisterPlaybackManagerNotifications(
[in]/* enum_16 */ short arg_1,
[in]/* enum_16 */ short arg_2);

long Proc10_s_pbmUnregisterPlaybackManagerNotifications(
[in]/* enum_16 */ short arg_1,
[in]/* enum_16 */ short arg_2);

long Proc11_s_pbmGetSoundLevel(
[out][ref]/* enum_16 */ short *arg_1);

long Proc12_s_pbmUpdateTrackName(
[in]/* simple_ref */[string] wchar_t* arg_1);

long Proc13_s_pbmUpdateArtistName(
[in]/* simple_ref */[string] wchar_t* arg_1);

long Proc14_s_pbmUpdateTrackState(
[in]long arg_1);

long Proc15_s_ccCreateHandsfreeHidFileFromAudioId(
[in]/* simple_ref */[string] wchar_t* arg_1,
[out]/* simple_ref */long *arg_2);

long Proc16_s_pbmUpdateAlbumArt(
[in]/* simple_ref */[string] wchar_t* arg_1);

long Proc17_s_pbmRegisterAppClosureNotification(
);

long Proc18_s_pbmUnregisterAppClosureNotification(
);

long Proc19_s_pbmPlayToStreamStateChanged(
[in]/* enum_16 */ short arg_1);

long Proc20_s_pbmIsPlaying(
[out]/* simple_ref */long *arg_1);

long Proc21_s_afxOpenAudioEffectsWatcher(
[in]/* simple_ref */[string] wchar_t* arg_1,
[in]/* enum_16 */ short arg_2,
[in]long arg_3,
[out]/* simple_ref */hyper *arg_4,
[out]/* simple_ref */[context_handle] void** arg_5);

void Proc22_s_afxCloseAudioEffectsWatcher(
[in][out]/* simple_ref */[context_handle] void** arg_0);

long Proc23_s_midiOpenPort(
[in]/* simple_ref */[string] wchar_t* arg_1,
[out]/* simple_ref */unsigned __int3264 *arg_2);
}

